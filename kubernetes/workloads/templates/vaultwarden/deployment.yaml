apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: $WORKLOAD_NAMESPACE
  labels:
    app: vaultwarden
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/part-of: ztc-workloads
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
      containers:
      - name: vaultwarden
        image: vaultwarden/server:$IMAGE_TAG
        ports:
        - containerPort: 80
          name: http
        env:
        - name: DOMAIN
          value: "http://$HOSTNAME"
        - name: ADMIN_TOKEN
          value: "$ADMIN_TOKEN"
        - name: SIGNUPS_ALLOWED
          value: "true"
        - name: WEBSOCKET_ENABLED
          value: "true"
        - name: DATA_FOLDER
          value: "/data"
        - name: ROCKET_TLS
          value: "{disabled=true}"
        - name: ROCKET_PORT
          value: "80"
        volumeMounts:
        - name: vaultwarden-data
          mountPath: /data
        resources:
          requests:
            memory: $MEMORY_REQUEST
            cpu: $CPU_REQUEST
          limits:
            memory: $MEMORY_LIMIT
            cpu: $CPU_LIMIT
        livenessProbe:
          httpGet:
            path: /alive
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /alive
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: vaultwarden-data
        persistentVolumeClaim:
          claimName: vaultwarden-pvc
