# Zero Touch Cluster Configuration
# This file defines your cluster configuration before deployment
# Run 'make prepare' to generate this file interactively

# Cluster Metadata
cluster:
  name: "ztc-homelab"
  description: "Zero Touch Cluster - Kubernetes homelab automation"
  version: "1.0.0"
# Network Configuration
network:
  # Primary cluster subnet
  subnet: "192.168.50.0/24"
  # DNS Configuration
  dns:
    # DNS server will be deployed on storage node
    enabled: true
    server_ip: "192.168.50.20"
    domain: "homelab.lan"
    # External DNS servers for fallback
    upstreams:
      - "8.8.8.8"
      - "1.1.1.1"
# Node Configuration
nodes:
  # SSH Configuration
  ssh:
    key_path: "~/.ssh/id_ed25519.pub"
    username: "ubuntu"
  # Cluster Nodes
  cluster_nodes:
    k3s-master:
      ip: "192.168.50.10"
      role: "master"
      resources:
        cpu: "2"
        memory: "4Gi"
    k3s-worker-01:
      ip: "192.168.50.11"
      role: "worker"
      resources:
        cpu: "2"
        memory: "4Gi"
    k3s-worker-02:
      ip: "192.168.50.12"
      role: "worker"
      resources:
        cpu: "2"
        memory: "4Gi"
    k3s-worker-03:
      ip: "192.168.50.13"
      role: "worker"
      resources:
        cpu: "2"
        memory: "4Gi"
  # Storage Node (dedicated for NFS and DNS)
  storage_node:
    k8s-storage:
      ip: "192.168.50.20"
      role: "storage"
      resources:
        cpu: "1"
        memory: "2Gi"
        storage: "100Gi"
# Storage Configuration
storage:
  # Storage strategy: "local-only", "hybrid", "longhorn", "nfs-only"
  strategy: "hybrid"
  # Default storage class for new PVCs
  default_class: "local-path"
  # Local Path Provisioner (k3s built-in)
  local_path:
    enabled: true
    is_default: true
  # NFS Storage
  nfs:
    enabled: true
    server:
      ip: "192.168.50.20"
      path: "/export/k8s"
    storage_class:
      name: "nfs-client"
      is_default: false
      reclaim_policy: "Delete"
  # Longhorn Distributed Storage
  longhorn:
    enabled: false
    replica_count: 3
    storage_class:
      name: "longhorn"
      is_default: false
      reclaim_policy: "Delete"
    # Enable for production clusters with 3+ nodes
    settings:
      backup_target: ""
      default_data_path: "/var/lib/longhorn/"
# System Components Configuration
components:
  # Core infrastructure components
  sealed_secrets:
    enabled: true
  argocd:
    enabled: true
    namespace: "argocd"
  # Monitoring Stack
  monitoring:
    enabled: true
    namespace: "monitoring"
    components:
      prometheus: true
      grafana: true
      alertmanager: true
    resources:
      prometheus:
        memory_limit: "2Gi"
        storage_size: "20Gi"
      grafana:
        memory_limit: "256Mi"
  # Git Server
  gitea:
    enabled: true
    namespace: "gitea"
    features:
      container_registry: true
      actions_runner: false
    resources:
      memory_limit: "512Mi"
      storage_size: "10Gi"
  # Homepage Dashboard
  homepage:
    enabled: true
    namespace: "homepage"
    features:
      service_discovery: true
      cluster_metrics: true
# Workload Bundles Auto-Deployment
workloads:
  # Automatically deploy workload bundles after cluster setup
  auto_deploy_bundles: []
  # Example options:
  # - "starter"      # Homepage + Uptime Kuma
  # - "monitoring"   # Comprehensive monitoring
  # - "productivity" # Development tools
  # - "security"     # Password management
  # - "development"  # Complete CI/CD toolkit

  # Custom workload configurations
  templates:
    default_storage_class: "local-path"
    default_memory_limit: "256Mi"
    default_cpu_limit: "200m"
# Deployment Configuration
deployment:
  # Deployment phases control what gets installed
  phases:
    infrastructure: true # Physical storage server and k3s cluster
    secrets: true # Sealed secrets and application credentials
    networking: true # DNS server deployment
    storage: true # Storage stack (NFS, Longhorn, etc.)
    system_components: true # Core services (monitoring, gitea, homepage)
    gitops: true # ArgoCD and repository setup
    workloads: true # Automatic workload bundle deployment
  # Deployment options
  options:
    wait_for_ready: true
    timeout_minutes: 15
    retry_failed: true
    backup_on_success: true
# Advanced Configuration
advanced:
  # Ansible configuration overrides
  ansible:
    inventory_path: "ansible/inventory/hosts.ini"
    vault_password_file: ".ansible-vault-password"
  # Kubernetes configuration
  kubernetes:
    version: "latest"
    container_runtime: "containerd"
  # Security settings
  security:
    auto_generate_passwords: true
    password_length: 32
    enable_rbac: true
  # Backup configuration
  backup:
    auto_backup_secrets: true
    backup_location: "."
    retention_days: 30
