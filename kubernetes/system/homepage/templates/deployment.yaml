apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ztc-homepage.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ztc-homepage.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ztc-homepage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ztc-homepage.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        {{- toYaml .Values.homepage.podSecurityContext | nindent 8 }}
      {{- if .Values.homepage.rbac.enabled }}
      serviceAccountName: {{ include "ztc-homepage.fullname" . }}
      {{- end }}
      initContainers:
      - name: config-setup
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          echo "Copying configuration files..."
          cp /config-source/* /config-target/ 2>/dev/null || true
          echo "Configuration files copied successfully"
          ls -la /config-target/
        volumeMounts:
        - name: config-source
          mountPath: /config-source
        - name: config-writable
          mountPath: /config-target
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
      containers:
      - name: homepage
        image: "{{ .Values.homepage.image.repository }}:{{ .Values.homepage.image.tag }}"
        imagePullPolicy: {{ .Values.homepage.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: PUID
          value: "{{ .Values.homepage.puid }}"
        - name: PGID
          value: "{{ .Values.homepage.pgid }}"
        - name: HOMEPAGE_VAR_TITLE
          value: "{{ .Values.homepage.title }}"
        - name: LOG_LEVEL
          value: "{{ .Values.homepage.logLevel }}"
        {{- if .Values.homepage.extraEnv }}
        {{- toYaml .Values.homepage.extraEnv | nindent 8 }}
        {{- end }}
        {{- if .Values.homepage.extraEnvFrom }}
        envFrom:
        {{- toYaml .Values.homepage.extraEnvFrom | nindent 8 }}
        {{- end }}
        volumeMounts:
        - name: config-writable
          mountPath: /app/config
        resources:
          {{- toYaml .Values.homepage.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: {{ .Values.homepage.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.homepage.probes.liveness.periodSeconds }}
          timeoutSeconds: {{ .Values.homepage.probes.liveness.timeoutSeconds }}
          failureThreshold: {{ .Values.homepage.probes.liveness.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: {{ .Values.homepage.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.homepage.probes.readiness.periodSeconds }}
          timeoutSeconds: {{ .Values.homepage.probes.readiness.timeoutSeconds }}
          failureThreshold: {{ .Values.homepage.probes.readiness.failureThreshold }}
        securityContext:
          {{- toYaml .Values.homepage.securityContext | nindent 10 }}
      volumes:
      - name: config-source
        configMap:
          name: {{ include "ztc-homepage.fullname" . }}-config
      - name: config-writable
        emptyDir: {}