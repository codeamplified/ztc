# Kube-Prometheus-Stack Helm Values
# Optimized for k3s homelab with NFS storage

# Global settings
fullnameOverride: ""
nameOverride: ""

# Grafana Configuration
grafana:
  enabled: true
  
  # Admin credentials
  adminPassword: "admin123"  # Change this in production!
  
  # Persistence using NFS storage
  persistence:
    enabled: true
    storageClassName: nfs-client
    size: 2Gi
    accessModes:
      - ReadWriteOnce
  
  # Ingress configuration for Traefik
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: web
    hosts:
      - grafana.homelab.local
  
  # Resource limits for homelab
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m

# Prometheus Configuration  
prometheus:
  enabled: true
  
  prometheusSpec:
    # Data retention
    retention: 30d
    
    # Storage using NFS
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: nfs-client
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    
    # Resource limits
    resources:
      requests:
        memory: 512Mi
        cpu: 200m
      limits:
        memory: 1Gi
        cpu: 1000m
    
    # Service monitor selector (monitor all)
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    ruleSelectorNilUsesHelmValues: false
    
    # External URL for Prometheus (optional)
    # externalUrl: "http://prometheus.homelab.local"

# AlertManager Configuration
alertmanager:
  enabled: true
  
  alertmanagerSpec:
    # Storage using NFS
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: nfs-client
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
    
    # Resource limits
    resources:
      requests:
        memory: 128Mi
        cpu: 50m
      limits:
        memory: 256Mi
        cpu: 200m

# Node Exporter (hardware metrics)
nodeExporter:
  enabled: true
  
# Kube State Metrics (Kubernetes object metrics)
kubeStateMetrics:
  enabled: true

# Prometheus Operator
prometheusOperator:
  enabled: true
  
  # Resource limits
  resources:
    requests:
      memory: 128Mi
      cpu: 50m
    limits:
      memory: 256Mi
      cpu: 200m

# Default rules (alerts and recording rules)
defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: false  # k3s doesn't expose etcd metrics
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubelet: true
    kubeProxy: false  # k3s uses kube-proxy differently
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: false  # k3s scheduler metrics not exposed by default
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true

# Additional scrape configs for k3s specific metrics
additionalScrapeConfigs: []

# Service monitors for k3s components
kubeApiServer:
  enabled: true

kubelet:
  enabled: true
  
kubeControllerManager:
  enabled: false  # Not exposed in k3s by default

kubeScheduler:
  enabled: false  # Not exposed in k3s by default

kubeProxy:
  enabled: false  # Different implementation in k3s

kubeEtcd:
  enabled: false  # Not exposed in k3s